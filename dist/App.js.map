{"version":3,"sources":["../src/App.ts"],"names":[],"mappings":";AACA,mCAAmC;AACnC,iCAAiC;AACjC,0CAA0C;AAE1C,kDAAkD;AAClD;IAKE,oDAAoD;IACpD;QACE,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,gCAAgC;IACxB,UAAU;QAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,2BAA2B;IACnB,MAAM;QACZ;;2BAEmB;QACnB,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,4BAA4B;QAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7B,GAAG,CAAC,IAAI,CAAC;gBACP,OAAO,EAAE,cAAc;aACxB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;CAEF;;AAED,kBAAe,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC","file":"App.js","sourcesContent":["import * as path from 'path';\r\nimport * as express from 'express';\r\nimport * as logger from 'morgan';\r\nimport * as bodyParser from 'body-parser';\r\n\r\n// Creates and configures an ExpressJS web server.\r\nclass App {\r\n\r\n  // ref to Express instance\r\n  public express: express.Application;\r\n\r\n  //Run configuration methods on the Express instance.\r\n  constructor() {\r\n    this.express = express();\r\n    this.middleware();\r\n    this.routes();\r\n  }\r\n\r\n  // Configure Express middleware.\r\n  private middleware(): void {\r\n    this.express.use(logger('dev'));\r\n    this.express.use(bodyParser.json());\r\n    this.express.use(bodyParser.urlencoded({ extended: false }));\r\n  }\r\n\r\n  // Configure API endpoints.\r\n  private routes(): void {\r\n    /* This is just to get up and running, and to make sure what we've got is\r\n     * working so far. This function will change when we start to add more\r\n     * API endpoints */\r\n    let router = express.Router();\r\n    // placeholder route handler\r\n    router.get('/', (req, res, next) => {\r\n      res.json({\r\n        message: 'Hello World!'\r\n      });\r\n    });\r\n    this.express.use('/', router);\r\n  }\r\n\r\n}\r\n\r\nexport default new App().express;"]}